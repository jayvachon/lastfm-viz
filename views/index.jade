doctype html
html(lang="en")
	head
		title= hi
	body
		h1= message
		script(type='text/javascript', src='https://d3js.org/d3.v3.min.js').
		script(type='text/javascript').

			var users = !{JSON.stringify(users)};
			var n = users.length,
				m = users[0].values.length;

			var earliest = users[0].values[0].x;
			var latest = users[0].values[users[0].values.length-1].x;

			var stack = d3.layout.stack()
				.offset("silhouette")
				.values(function(d) { return d.values; });

			var layers = stack(users);

			var width = m*50,
			    height = 500;

			var x = d3.scale.linear()
			    .domain([earliest, latest])
			    .range([0, width]);

			var y = d3.scale.linear()
			    .domain([0, d3.max(layers, function(layer) { return d3.max(layer.values, function(d) { return d.y + d.y0; }) })])
			    .range([height, 0]);

			var color = function() { return "hsl(" + Math.random() * 360 + ",100%,50%)"; };//d3.scale.linear()
			    //- .range(["red", "yellow", "green", "blue", "violet"]);

			var axis = d3.svg.axis()
				.scale(x)
				.orient("bottom")
				.ticks(100);
				//- .tickValues(d3.map(users[0].values, function(d) { return d.x; }));

			var area = d3.svg.area()
			    .x(function(d) { return x(d.x); })
			    .y0(function(d) { return y(d.y0); })
			    .y1(function(d) { return y(d.y0 + d.y); });

			var svg = d3.select("body").append("svg")
					.attr("width", width)
					.attr("height", height);

			svg.selectAll("path")
			    .data(layers)
			  .enter().append("path")
			    .attr("d", function(d) { return area(d.values); })
			    .style("fill", function() { return color(Math.random()); })
			  .append("title")
			    .text(function(d) { return d.name; });

			//- svg.append("g")
			//- 	.attr("class", "axis")
			//- 	.attr("transform", "translate(0," + (height-25) + ")")
			//- 	.call(axis);

